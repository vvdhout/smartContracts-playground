<DOCTYPE! html>
<html>
<head>
  <meta name="viewport" content="width=device-width">
  <meta charset="utf-8">

  <title>Add Social Info - Decentralized Profile Pages by Disisme</title>
  <meta name="description" content="Here you can add social network information for facebook, twitter, and github.">

  <!-- <link rel="stylesheet" type="text/css" src="../css/style.css"> -->

  <style>
  body {
  color: #333;
  font-family: Calibri, Arial;
  font-size: 0;
  margin: 0;
}

.nav {
  padding: 20px 40px;
  -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  border-bottom: 0.5px solid lightgrey;
}

.nav div {
  display: inline-block;
  vertical-align: middle;
  -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

.nav .logo {
  width: 15%;
  font-size: 1.8rem;
  letter-spacing: 1.4px;
  font-weight: 600;
}

.nav .search {
  width: 50%;
}

.nav .search #search {
  width: 80%;
  margin-right: 1%;
  padding: 10px;
  -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  letter-spacing: 0.8px;
}

.nav .search #submit {
  padding: 10px;
  background-color: #29CE9A;
  border: 2px solid #29CE9A;
  color: #fff;
  font-weight: 400;
  letter-spacing: 0.8px;
  border-radius: 2px;
  -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

#submit:hover {
  cursor: pointer;
  cursor: hand;
  opacity: 0.8;
}

.nav .buttons {
  width: 35%;
  text-align: right;
}

.nav .buttons ul {
  list-style: none;
}

.nav .buttons ul li {
  display: inline-block;
  padding: 0 5%;
  color: #333;
  -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  font-size: 1rem;
}

.nav .buttons ul a:hover li {
  color: #29CE9A
}

#signup {
  padding: 10px;
  background-color: #29CE9A;
  border: 2px solid #29CE9A;
  color: #fff;
  font-weight: 600;
  letter-spacing: 0.8px;
  border-radius: 2px;
  -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

#signup:hover {
  cursor: pointer;
  cursor: hand;
  opacity: 0.8;
}

/* Moving to the main content */

.home {
  padding: 4% 8%;
  background-color: #fbfbfb;
}

.home form {
  width: 35%;
  margin: auto;
}

.home form input, .home form textarea{
  width: 100%;
  padding: 10px 20px;
  font-size: 0.9rem;
  margin-bottom: 20px;
}

.home form #createProfile {
  padding: 10px 20px;
  font-size: 0.9rem;
  background-color: #29CE9A;
    border: 2px solid #29CE9A;
    color: #fff;
    font-weight: 400;
    letter-spacing: 0.8px;
    border-radius: 2px;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

.home form #createProfile:hover {
      cursor: pointer;
    cursor: hand;
    opacity: 0.8;
}

  </style>

  <script src="https://cdn.jsdelivr.net/gh/ethereum/web3.js/dist/web3.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.4.1/css/all.css" integrity="sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz" crossorigin="anonymous">

</head>

<body>

<div class="container">
  <div class="nav">
    <div class="logo">
      DISISME
    </div>
    <div class="search">
      <form method="get" action="/u/">
        <input type="text" name="address" id="search" placeholder="e.g. 0xca35b7d915458ef540ade6068dfe2f44e8fa733c">
        <input type="submit" value="Find" id="submit">
      </form>
    </div>
    <div class="buttons">
      <ul>
        <a href="#"><li>How does it work</li></a>
        <a href="#"><li>About</li></a>
        <a href="#"><li><u>Log In</u></li></a>
        <a href="#"><li id="signup">SIGN UP</li></a>
      </ul>
    </div>
  </div>
  
  <div class="home">
    
    <!--This page will hold a super simple form that allows profile creation on Disisme using MetaMask as the address provider and validator. -->
    <form method="get" action="../u/">

      <input type="text" id="facebook" placeholder="https://facebook.com/username">
      <input type="text" id="twitter" placeholder="https://twitter.com/username">
      <input type="text" id="github" placeholder="https://github.com/username">
      <input style="background-color: #eee; border: 0.5px solid lightgrey; color: #999;" type="text" id="address" name="address" readonly>
      <div id="createProfile" value="Create profile">Add Social Info</div>
      <input style="display: none;" type="submit" id="submitCreate">

    </form>

  </div>
  
  
</div>

<script>

// Specifiy the ethereum provider
if (typeof web3 !== 'undefined') {
  web3 = new Web3(web3.currentProvider);
  console.log('We already have a provider.');
} else {
  web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545")); 
  console.log('We have set a new provider on Ganache chain at localhost:8454');
}

// Specify the default account
web3.eth.defaultAccount = web3.eth.accounts[0];
console.log('Default account: ' + web3.eth.defaultAccount);
$('#address').attr('value',web3.eth.defaultAccount);

// Provide ABI that functions that interface between the contract and JS
const disismeContract = web3.eth.contract([
  {
    "constant": false,
    "inputs": [
      {
        "name": "_imageURL",
        "type": "string"
      }
    ],
    "name": "setProfilePic",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "",
        "type": "address"
      }
    ],
    "name": "people",
    "outputs": [
      {
        "name": "email",
        "type": "string"
      },
      {
        "name": "fName",
        "type": "string"
      },
      {
        "name": "lName",
        "type": "string"
      },
      {
        "name": "age",
        "type": "uint256"
      },
      {
        "name": "bio",
        "type": "string"
      },
      {
        "name": "profilePic",
        "type": "string"
      },
      {
        "components": [
          {
            "name": "facebookURL",
            "type": "string"
          },
          {
            "name": "twitterURL",
            "type": "string"
          },
          {
            "name": "githubURL",
            "type": "string"
          }
        ],
        "name": "social",
        "type": "tuple"
      },
      {
        "components": [
          {
            "name": "img1",
            "type": "string"
          },
          {
            "name": "img2",
            "type": "string"
          },
          {
            "name": "img3",
            "type": "string"
          },
          {
            "name": "img4",
            "type": "string"
          }
        ],
        "name": "media",
        "type": "tuple"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "getFriends",
    "outputs": [
      {
        "name": "",
        "type": "address[]"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_email",
        "type": "string"
      }
    ],
    "name": "setEmail",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_url",
        "type": "string"
      }
    ],
    "name": "setFacebook",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "_address",
        "type": "address"
      }
    ],
    "name": "getEmail",
    "outputs": [
      {
        "name": "email",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "_address",
        "type": "address"
      }
    ],
    "name": "getPersonSocial",
    "outputs": [
      {
        "name": "facebookURL",
        "type": "string"
      },
      {
        "name": "twitterURL",
        "type": "string"
      },
      {
        "name": "githubURL",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "_address",
        "type": "address"
      }
    ],
    "name": "getPersonBase",
    "outputs": [
      {
        "name": "fName",
        "type": "string"
      },
      {
        "name": "lName",
        "type": "string"
      },
      {
        "name": "bio",
        "type": "string"
      },
      {
        "name": "profilePic",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_address",
        "type": "address"
      }
    ],
    "name": "removeFriend",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_url",
        "type": "string"
      }
    ],
    "name": "setTwitter",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_urlfb",
        "type": "string"
      },
      {
        "name": "_urltw",
        "type": "string"
      },
      {
        "name": "_urlgh",
        "type": "string"
      }
    ],
    "name": "setSocial",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_address",
        "type": "address"
      }
    ],
    "name": "addFriend",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_url",
        "type": "string"
      }
    ],
    "name": "setGitHub",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_fName",
        "type": "string"
      },
      {
        "name": "_lName",
        "type": "string"
      },
      {
        "name": "_age",
        "type": "uint256"
      },
      {
        "name": "_email",
        "type": "string"
      },
      {
        "name": "_bio",
        "type": "string"
      },
      {
        "name": "_profilePic",
        "type": "string"
      }
    ],
    "name": "createProfile",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_bio",
        "type": "string"
      }
    ],
    "name": "setBio",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "constructor"
  }
]);

// Point to actual contract using address
const disisme = disismeContract.at('0x4940203b90d9c89707a0cd3f4fa1cba9619f270c');

// ===================================================================================================================
// Here we will start to actually implement functions that pull data from the blockchain and communicate with the SC
// ===================================================================================================================

// //NOTE THERE IS AN ERROR IN HERE SOMEWHERE
$('#createProfile').click(function() {
  web3.eth.defaultAccount = web3.eth.accounts[0];
  console.log('Submitted address: ' + web3.eth.defaultAccount);
  $('#address').attr('value', web3.eth.defaultAccount);
  disisme.setSocial($('#facebook').val(), $('#twitter').val(), $('#github').val(), function(error, result) {
    if(error) {
      alert('We were not able to set the social network urls for this address.')
    }
  })
  // disisme.setFacebook($('#facebook').val(), function(error, result) {
  //   if(error) {
  //     alert('We were not able to set the facebook-url for this address.')
  //   }
  // })
  // disisme.setTwitter($('#twitter').val(), function(error, result) {
  //   if(error) {
  //     alert('We were not able to set the github-url for this address.')
  //   }
  // })
  // disisme.setGitHub($('#github').val(), function(error, result) {
  //   if(error) {
  //     alert('We were not able to set the twitter-url for this address.')
  //   }
  // })
  alert('The info is submitted. Though, it can take a minute or two before it shows up on your profile. Do not worry about that. We will redirect you to your profile now. Cheers!');
  $('#submitCreate').click();
})

</script>

</body>
</html>