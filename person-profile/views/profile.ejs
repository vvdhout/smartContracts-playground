<DOCTYPE! html>
<html>
<head>
  <meta name="viewport" content="width=device-width">
  <meta charset="utf-8">

  <title>Jane Doe - Decentralized Profile Pages by Disisme</title>
  <meta name="description" content="Jane Doe's Profile on Disisme - I am an avid programmer with a background in distributed ledger technology and a formal education in Cryptography. Currently working @tokenbasher.io; student...">

  <!-- <link rel="stylesheet" type="text/css" src="../css/style.css"> -->

  <style>
  body {
  color: #333;
  font-family: Calibri, Arial;
  font-size: 0;
  margin: 0;
}

.nav {
  padding: 20px 40px;
  -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  border-bottom: 0.5px solid lightgrey;
}

.nav div {
  display: inline-block;
  vertical-align: middle;
  -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

.nav .logo {
  width: 15%;
  font-size: 1.8rem;
  letter-spacing: 1.4px;
  font-weight: 600;
}

.nav .search {
  width: 50%;
}

.nav .search #search {
  width: 80%;
  margin-right: 1%;
  padding: 10px;
  -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  letter-spacing: 0.8px;
}

.nav .search #submit {
  padding: 10px;
  background-color: #29CE9A;
  border: 2px solid #29CE9A;
  color: #fff;
  font-weight: 400;
  letter-spacing: 0.8px;
  border-radius: 2px;
  -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

#submit:hover {
  cursor: pointer;
  cursor: hand;
  opacity: 0.8;
}

.nav .buttons {
  width: 35%;
  text-align: right;
}

.nav .buttons ul {
  list-style: none;
}

.nav .buttons ul li {
  display: inline-block;
  padding: 0 5%;
  color: #333;
  -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  font-size: 1rem;
}

.nav .buttons ul a:hover li {
  color: #29CE9A
}

#signup {
  padding: 10px;
  background-color: #29CE9A;
  border: 2px solid #29CE9A;
  color: #fff;
  font-weight: 600;
  letter-spacing: 0.8px;
  border-radius: 2px;
  -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

#signup:hover {
  cursor: pointer;
  cursor: hand;
  opacity: 0.8;
}

/* Moving to the main content */

.home {
  padding: 4% 8%;
  background-color: #fbfbfb;
}

.sidebar {
  width: 25%;
  padding: 25px 35px;
  text-align: center;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  display: inline-block;
  vertical-align: top;
  border: 0.5px solid #eee;
  box-shadow: 3px 3px 10px 0 #eee;
  background-color: #fff;
}

.sidebar .profile-image img {
  width: 100%;
  border: 0.5px solid #eee;
  box-shadow: 3px 3px 10px 0 #eee;
}

.social-info {
  padding: 20px 5%;
  font-size: 0.7rem;
  color: #555;
  letter-spacing: 1px;
  margin-top: 20px;
  border: 0.5px solid #eee;
}

.social-info .networks {
  font-size: 1.7rem;
  margin-bottom: 5px;
}

.social-info .networks i {
  margin: auto 10px;
  color: #29CE9A;
}

.social-info .networks i:hover {
  opacity: 0.8;
}

.social-info #getemail:hover {
  cursor: pointer;
  cursor: hand; 
  opacity: 0.8;
}

.sb-buttons {
  font-size: 1.4rem;
}

.sb-buttons .button {
  padding: 10px 25px;
  width: 40%;
  margin: 30px auto;
  background-color: #333;
  color: #fff;
  border-radius: 2px;
  box-shadow: 5px 5px 12px 0 #ddd;
  transition: 0.5s;
}

.sb-buttons .button:hover {
  cursor: pointer;
  cursor: hand;
  box-shadow: 3px 3px 10px 0 #eee;
  transition: 0.5s;
}


.core {
  
}

.core {
  width: 75%;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  padding: 0 10px 0 60px;
  display: inline-block;
  vertical-align: top;
}

.core .basics {
  border: 0.5px solid #eee;
  box-shadow: 3px 3px 10px 0 #eee;
  padding: 15px 45px 30px;
  background-color: #fff;
}

.core .basics h1 {
  font-size: 3.5rem;
  margin: 0;
  font-weight: 300;
}

.core #address {
  margin-top: -8px;
  letter-spacing: 2.5px;
  margin-bottom: 8px;
  color: #999;
  font-size: 0.9rem;
}

.core .basics hr {
  border: 0.5px solid #ddd;
  margin: 10px auto;
}

.core .basics p {
  font-size: 1rem;
  margin: 0;
  letter-spacing: 0.5px;
  text-align: justify;
}

.core .basics #timest {
  color: #999;
  font-size: 1rem;
}

.images {
  margin-top: 40px;
  padding: 15px;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

.images .row {
  clear: both;
}

.images img {
  width: 47%;
  box-shadow: 5px 5px 15px 0 #ccc;
  margin: auto;
  vertical-align: middle;
  margin-bottom: 40px;
  transition: 0.5s;
}

.images img:hover {
  box-shadow: 3px 3px 12px 0 #ddd;
  transition: 0.5s;
  cursor: hand;
  cursor: pointer;
}

.images .row img:first-child {
  float: left;
}

.images .row img:nth-child(2) {
  float: right;
}
  </style>

  <script src="https://cdn.jsdelivr.net/gh/ethereum/web3.js/dist/web3.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.4.1/css/all.css" integrity="sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz" crossorigin="anonymous">

</head>

<body>

<div class="container">
  <div class="nav">
    <a href="/u/" style="color: #333"><div class="logo">
      DISISME
    </div></a>
    <div class="search">
      <form method="get" action="/u/">
        <input type="text" name="address" id="search" placeholder="e.g. 0xca35b7d915458ef540ade6068dfe2f44e8fa733c">
        <input type="submit" value="Find" id="submit">
      </form>
    </div>
    <div class="buttons">
      <ul>
        <a href="/friends/"><li>Friends</li></a>
        <a href="/social"><li>Add Social</li></a>
        <a href="/create/"><li id="signup">Create Profile</li></a>
        <!-- <a href="#"><li>How does it work</li></a>
        <a href="#"><li>About</li></a>
        <a href="#"><li><u>Log In</u></li></a>
        <a href="#"><li id="signup">SIGN UP</li></a> -->
      </ul>
    </div>
  </div>
  
  <div class="home">
    
    <!-- This sidebar contains some of the person's information such as the profile picture, age (when revealed), email (when revealed), and a few buttons that navigate to sub information -->
    <div class="sidebar">
      <div class="profile-image">
        <img id="profilePic" src="https://images.unsplash.com/photo-1533557188897-ef2bc7257ba3?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=e4aa35edaa52b128fd06333630074684&auto=format&fit=crop&w=500&q=60" />
      </div>
      
      <div class="social-info">
        <div class="networks"><a id="twitterURL" href="https://twitter.com/jdburani/"><i class="fab fa-twitter"></i></a><a id="facebookURL" href="https://facebook.com/jdburani/"><i class="fab fa-facebook"></i></a><a id="githubURL" href="https://github.com/jdburani/"><i class="fab fa-github"></i></a></div>
        <div id="email"><span id="getemail">[SEE EMAIL]</span></div>
      </div>
      
      <div class="sb-buttons">
        <div class="button">
          SKILLS
        </div>
        <div class="button">
          HOBBIES
        </div>
        <div class="button">
          WORK
        </div>
      </div>
      
    </div>
    
    <!-- This div will make up the majority of the page, containing information such as full name, bio, social buttons, and images. -->
    <div class="core">
      <div class="basics">
        <h1><span id="fName"></span> <span id="lName"></h1>
<div id="address"></div>
        <hr>
        <p><span id="timest"><i>23rd of January, 2018 -</i></span> <span id="bio">I am an avid programmer with a background in distributed ledger technology and a formal education in Cryptography. Currently working @tokenbasher.io; student of the Udacity Blockchain Developer Nanodegree. Fanatic swimmer on the side.</span></p>
      </div>
      
      <div class="images">
        <div class="row">
          <img src="https://images.unsplash.com/photo-1523464862212-d6631d073194?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=1917d113c1f77cc8f60e1f2da0c9c47d&auto=format&fit=crop&w=500&q=60" />
          <img src="https://images.unsplash.com/photo-1530995377270-ac41692cd439?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=e3832424b5fb3cfcf0ea0de07bd96443&auto=format&fit=crop&w=500&q=60" />
        </div>
        <div class="row">
          <img src="https://images.unsplash.com/photo-1526080676457-4544bf0ebba9?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=b737ad3b3a556eba651416be8846bb0f&auto=format&fit=crop&w=500&q=60" />
          <img src="https://images.unsplash.com/photo-1533727745100-e50cf931def7?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=591fea7fe7d229d2f81fbc034a6b0834&auto=format&fit=crop&w=500&q=60" />
        </div>
      </div>
      
    </div>
  </div>
  
  
</div>

<script>

// Specifiy the ethereum provider
if (typeof web3 !== 'undefined') {
  web3 = new Web3(web3.currentProvider);
  console.log('We already have a provider.');
} else {
  web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545")); 
  console.log('We have set a new provider on Ganache chain at localhost:8454');
}

// Specify the default account
web3.eth.defaultAccount = web3.eth.accounts[0];
console.log('Default account: ' + web3.eth.defaultAccount);

// Provide ABI that functions that interface between the contract and JS
const disismeContract = web3.eth.contract([
  {
    "constant": false,
    "inputs": [
      {
        "name": "_imageURL",
        "type": "string"
      }
    ],
    "name": "setProfilePic",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "",
        "type": "address"
      }
    ],
    "name": "people",
    "outputs": [
      {
        "name": "email",
        "type": "string"
      },
      {
        "name": "fName",
        "type": "string"
      },
      {
        "name": "lName",
        "type": "string"
      },
      {
        "name": "age",
        "type": "uint256"
      },
      {
        "name": "bio",
        "type": "string"
      },
      {
        "name": "profilePic",
        "type": "string"
      },
      {
        "components": [
          {
            "name": "facebookURL",
            "type": "string"
          },
          {
            "name": "twitterURL",
            "type": "string"
          },
          {
            "name": "githubURL",
            "type": "string"
          }
        ],
        "name": "social",
        "type": "tuple"
      },
      {
        "components": [
          {
            "name": "img1",
            "type": "string"
          },
          {
            "name": "img2",
            "type": "string"
          },
          {
            "name": "img3",
            "type": "string"
          },
          {
            "name": "img4",
            "type": "string"
          }
        ],
        "name": "media",
        "type": "tuple"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "getFriends",
    "outputs": [
      {
        "name": "",
        "type": "address[]"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_email",
        "type": "string"
      }
    ],
    "name": "setEmail",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_url",
        "type": "string"
      }
    ],
    "name": "setFacebook",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "_address",
        "type": "address"
      }
    ],
    "name": "getEmail",
    "outputs": [
      {
        "name": "email",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "_address",
        "type": "address"
      }
    ],
    "name": "getPersonSocial",
    "outputs": [
      {
        "name": "facebookURL",
        "type": "string"
      },
      {
        "name": "twitterURL",
        "type": "string"
      },
      {
        "name": "githubURL",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "_address",
        "type": "address"
      }
    ],
    "name": "getPersonBase",
    "outputs": [
      {
        "name": "fName",
        "type": "string"
      },
      {
        "name": "lName",
        "type": "string"
      },
      {
        "name": "bio",
        "type": "string"
      },
      {
        "name": "profilePic",
        "type": "string"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_address",
        "type": "address"
      }
    ],
    "name": "removeFriend",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_url",
        "type": "string"
      }
    ],
    "name": "setTwitter",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_urlfb",
        "type": "string"
      },
      {
        "name": "_urltw",
        "type": "string"
      },
      {
        "name": "_urlgh",
        "type": "string"
      }
    ],
    "name": "setSocial",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_address",
        "type": "address"
      }
    ],
    "name": "addFriend",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_url",
        "type": "string"
      }
    ],
    "name": "setGitHub",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_fName",
        "type": "string"
      },
      {
        "name": "_lName",
        "type": "string"
      },
      {
        "name": "_age",
        "type": "uint256"
      },
      {
        "name": "_email",
        "type": "string"
      },
      {
        "name": "_bio",
        "type": "string"
      },
      {
        "name": "_profilePic",
        "type": "string"
      }
    ],
    "name": "createProfile",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_bio",
        "type": "string"
      }
    ],
    "name": "setBio",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "constructor"
  }
]);

// Point to actual contract using address
const disisme = disismeContract.at('0x4940203b90d9c89707a0cd3f4fa1cba9619f270c');

// ===================================================================================================================
// Here we will start to actually implement functions that pull data from the blockchain and communicate with the SC
// ===================================================================================================================

// Get address parameter from url
let url_string = window.location.href;
let url = new URL(url_string);
let _address = url.searchParams.get("address");
console.log('Queries address: ' + _address);


// Get basic person information
disisme.getPersonBase(_address, function(error, result) {
  if (error) {
    alert('Something went wrong fetching the data. Info below is placeholder data.')
    $('#fName').html('Jane');
    $('#lName').html('Doe');
    $('#bio').html('I am an avid programmer with a background in distributed ledger technology and a formal education in Cryptography. Currently working @tokenbasher.io; student of the Udacity Blockchain Developer...');
    $('#address').html('0x1234567a9b8d296c39d04659978c0b1edb6a13ff')
  } else {
    if(!result[0]) {
      alert('This address does not exist in our database. Info below is placeholder data.')
      $('#fName').html('Jane');
      $('#lName').html('Doe');
      $('#bio').html('I am an avid programmer with a background in distributed ledger technology and a formal education in Cryptography. Currently working @tokenbasher.io; student of the Udacity Blockchain Developer...');
      $('#address').html('0x1234567a9b8d296c39d04659978c0b1edb6a13ff')
    } else {
      $('#fName').html(result[0]);
      $('#lName').html(result[1]);
      $('#bio').html(result[2]);
      $('#profilePic').attr('src', result[3]);
      $('#address').html(_address);
    }
  }
})

// Import social network information

disisme.getPersonSocial(_address, function(error, result) {
  if(error) {
    console.log('Error fetching social data.')
  } else {
    $('#twitterURL').attr("href", result[1]);
    $('#facebookURL').attr("href", result[0]);
    $('#githubURL').attr("href", result[2]);
  }
})

// Get email functionality
$('#getemail').click(function() {
  disisme.getEmail(_address, function(error, result) {
    if (error) {
      alert('Something went wrong fetching, or you are not allowed to see this email because you are not added as a friend by this person.')
    } else {
      $('#getemail').del();
      $('#email').html(result[0]);
    }
  })
})


</script>

</body>
</html>